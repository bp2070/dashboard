import type { NextPage } from "next";
import Head from "next/head";
import React from "react";
import { trpc } from "../utils/trpc";

const CreateComponent: React.FC = () => {
  const inputRef = React.useRef<HTMLInputElement>(null)
  const client = trpc.useContext();
  const { mutate, isLoading } = trpc.useMutation("new.create", {
    onSuccess: () => {
      client.invalidateQueries("new.get-all");
      if(inputRef.current) {
        inputRef.current.value = "";
      }
    },
  });

  return (
    <div className="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
      <label className="block text-gray-700 text-sm font-bold mb-2">
        Create New Item: 
      </label>
      <input
        ref={inputRef}
        disabled={isLoading}
        className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
        onKeyDown={(e) => {
          if (e.key === "Enter") {
            mutate({ name: e.currentTarget.value });
          }
        }}
      ></input>
    </div>
  );
};

const Home: NextPage = () => {
  const { data, isLoading } = trpc.useQuery(["new.get-all"]);

  if (!data || isLoading) return <div>Loading...</div>;

  return (
    <div className="p-5 flex flex-col">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1 className="text-2xl font-bold">
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <h2 className="text-xl">The Things:</h2>

        <ul>
          {data.map((d) => (
            <li key={d.id}>{d.name}</li>
          ))}
        </ul>
        <CreateComponent />
      </main>
    </div>
  );
};

export default Home;
